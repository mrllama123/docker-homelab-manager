[tool.poetry]
name = "docker-homelab-manager"
description = "a simple web app to manage homelab docker compose services"
authors = ["Bob Bruce <piesrule123@gmail.com>"]
version = "0.1.0"
packages = [{ include = "src" }]

readme = "README.md"
license = "GPL-3.0-or-later"

classifiers = [
    # Get the list of trove classifiers here: https://pypi.org/classifiers/
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
homepage = "https://github.com/mrllama123/docker-homelab-manager"
# keywords = ["awesome", "project"]  # Maximum of 5 keywords

[tool.poetry.dependencies]
python = "^3.8"
fastapi = "^0.104.1"
uvicorn = { extras = ["standard"], version = "^0.24.0.post1" }
docker = "^7.0.0"
redis = "^5.0.1"
celery = {extras = ["redis"], version = "^5.3.6"}


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
hypothesis = "^6.68.2"
mypy = "^1.0.1"
pytest = "^7.2.1"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
ruff = "^0.0.249"
shed = "^0.10.9"

toml = "^0.10.2"

[tool.poe.tasks]
# Code linting
mypy = { cmd = "mypy src --strict", help = "Run MyPy on codebase" }
ruff = { cmd = "ruff check src", help = "Run Ruff on codebase" }
check_black = { cmd = "black src --check" }
check_imports = { cmd = "ruff check src --select I" }
style = ["check_black", "check_imports"]
api-dev = { cmd = "uvicorn src.api.main:app --reload", help = "Run the API in dev mode" }
celery-dev = { cmd = "celery -A src.celery.worker worker --loglevel=INFO", help = "Run the celery worker in dev mode" }
codebase = ["ruff", "mypy"]

[tool.poe.tasks.format]
shell = "shed && ruff check src --fix"
help = "Format code"

[tool.poe.tasks.lint]
sequence = ["style", "codebase"]
help = "Lint codebase"

[tool.poe.tasks.test]
cmd = "pytest -vvv --cov=src"
help = "Simply run test suite"

[tool.poe.tasks.ci]
cmd = "pytest -vvv --cov=src --cov-report=xml"
help = "This workflow is for Github Actions"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Same as Black.
line-length = 88
select = ["ALL"]
ignore = [
    # "D",    # "No docs"
    "T20", # "Don't use print or pprint"
    # "ANN",  # Type annotation errors (or the lack of it)
    "ANN101", # The type annotation for `self` is inferred
    "FBT",    # I actually don't know why this exists
    # and it seems useless so ignore it
    # Fix doc rule conflicts
    "D203",
    "D213",
]
target-version = "py38"
[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101", "D"]
"docs/conf.py" = ["INP001", "A001"]
