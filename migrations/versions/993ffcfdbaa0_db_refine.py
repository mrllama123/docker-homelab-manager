"""db refine

Revision ID: 993ffcfdbaa0
Revises: 
Create Date: 2024-02-06 11:18:54.160919

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '993ffcfdbaa0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backups',
    sa.Column('backup_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('schedule_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('volume_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('backup_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('backup_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('backup_created', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('errorMessage', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['scheduledbackups.schedule_id'], ),
    sa.ForeignKeyConstraint(['volume_name'], ['backupvolumes.volume_name'], ),
    sa.PrimaryKeyConstraint('backup_id')
    )
    op.create_table('backupvolumes',
    sa.Column('backup_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('volume_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['backup_id'], ['backups.backup_id'], ),
    sa.PrimaryKeyConstraint('backup_id')
    )
    op.create_table('restorebackupvolumes',
    sa.Column('restore_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('volume_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['restore_id'], ['restoredbackups.restore_id'], ),
    sa.PrimaryKeyConstraint('restore_id')
    )
    op.create_table('restoredbackups',
    sa.Column('restore_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('volume_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('backup_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('restored_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('errorMessage', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['backup_filename'], ['backupfilenames.backup_filename'], ),
    sa.ForeignKeyConstraint(['volume_name'], ['restorebackupvolumes.volume_name'], ),
    sa.PrimaryKeyConstraint('restore_id')
    )
    op.create_table('scheduledbackups',
    sa.Column('backup_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('schedule_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('schedule_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['backup_id'], ['backups.backup_id'], ),
    sa.PrimaryKeyConstraint('backup_id')
    )
    op.create_table('backupfilenames',
    sa.Column('backup_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('backup_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['backup_id'], ['backups.backup_id'], ),
    sa.PrimaryKeyConstraint('backup_filename')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('backupfilenames')
    op.drop_table('scheduledbackups')
    op.drop_table('restoredbackups')
    op.drop_table('restorebackupvolumes')
    op.drop_table('backupvolumes')
    op.drop_table('backups')
    # ### end Alembic commands ###
