"""remove cyclic foreign keys

Revision ID: 8ac20eaf169c
Revises: 866892f8fecb
Create Date: 2024-02-08 07:35:52.269010

"""

from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8ac20eaf169c"
down_revision: Union[str, None] = "866892f8fecb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    naming_convention = {
        "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    }
    with op.batch_alter_table("backups") as batch_op:
        batch_op.drop_constraint("backup_filename", type_="foreignkey")
        batch_op.drop_constraint("volume_name", type_="foreignkey")
    with op.batch_alter_table("restoredbackups") as batch_op:
        batch_op.drop_constraint("backup_filename", type_="foreignkey")
        batch_op.drop_constraint("volume_name", type_="foreignkey")
    op.drop_table("scheduledbackups")
    op.drop_table("restorebackupvolumes")
    op.drop_table("backupvolumes")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scheduledbackups",
        sa.Column("backup_id", sa.VARCHAR(), nullable=False),
        sa.Column("schedule_id", sa.VARCHAR(), nullable=True),
        sa.Column("schedule_name", sa.VARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["backup_id"],
            ["backups.backup_id"],
        ),
        sa.PrimaryKeyConstraint("backup_id"),
    )
    op.create_table(
        "backupvolumes",
        sa.Column("backup_id", sa.VARCHAR(), nullable=False),
        sa.Column("volume_name", sa.VARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["backup_id"],
            ["backups.backup_id"],
        ),
        sa.PrimaryKeyConstraint("backup_id"),
    )
    op.create_table(
        "restorebackupvolumes",
        sa.Column("restore_id", sa.VARCHAR(), nullable=False),
        sa.Column("volume_name", sa.VARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["restore_id"],
            ["restoredbackups.restore_id"],
        ),
        sa.PrimaryKeyConstraint("restore_id"),
    )
    op.create_foreign_key(
        None,
        "restoredbackups",
        "backupfilenames",
        ["backup_filename"],
        ["backup_filename"],
    )
    op.create_foreign_key(
        None,
        "restoredbackups",
        "restorebackupvolumes",
        ["volume_name"],
        ["volume_name"],
    )
    op.create_foreign_key(
        None, "backups", "scheduledbackups", ["schedule_id"], ["schedule_id"]
    )
    op.create_foreign_key(
        None, "backups", "backupvolumes", ["volume_name"], ["volume_name"]
    )
    # ### end Alembic commands ###
